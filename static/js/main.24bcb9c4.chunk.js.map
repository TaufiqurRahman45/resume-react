{"version":3,"sources":["components/header/header.js","components/about/about.js","components/resume/resume.js","components/contactus/contactus.js","components/footer/footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","Fragment","id","className","href","title","name","socialLinks","map","item","key","url","Component","About","src","alt","role","roleDescription","address","email","Resume","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","experience","CompanyName","MonthOfJoining","YearOfJoining","MonthOfLeaving","YearOfLeaving","Achievements","skillsDescription","skills","skillname","toLowerCase","ContactUs","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.24bcb9c4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nexport default class Header extends Component {\r\n    render() {\r\n        let resumeData = this.props.resumeData;\r\n        return (\r\n            <React.Fragment>\r\n                <header id=\"home\">\r\n                    <nav id=\"nav-wrap\">\r\n                        <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\r\n                        <a className=\"mobile-btn\" href=\"/\" title=\"Hide navigation\">Hide navigation</a>\r\n                        <ul id=\"nav\" className=\"nav\">\r\n                            <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\r\n                            <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\r\n                            <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\r\n                            <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\r\n                        </ul>\r\n                    </nav>\r\n\r\n                    <div className=\"row banner\">\r\n                        <div className=\"banner-text\">\r\n                            <h1 className=\"responsive-headline\">I am {resumeData.name}</h1>\r\n                            \r\n                            <hr />\r\n                            <ul className=\"social\">\r\n                                {\r\n                                    resumeData.socialLinks && resumeData.socialLinks.map(item => {\r\n                                        return (\r\n                                            <li key={item.name}>\r\n                                                <a href={item.url} ><i className={item.className}></i></a>\r\n                                            </li>\r\n                                        )\r\n                                    }\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <p className=\"scrolldown\">\r\n                        <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\r\n                    </p>\r\n\r\n                </header>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nexport default class About extends Component {\r\n    render() {\r\n        let resumeData = this.props.resumeData;\r\n        return (\r\n\r\n            <section id=\"about\">\r\n              <div className=\"row\">\r\n                <div className=\"three columns\">\r\n                  <img className=\"profile-pic\" src=\"images/profilepic.jpg\" alt=\"\" />\r\n                </div>\r\n                <div className=\"nine columns main-col\">\r\n                  <h2>About Me</h2>\r\n                  <p>\r\n                     I am a {resumeData.role} .<br />\r\n                      {resumeData.roleDescription}\r\n                  </p>\r\n                  <div className=\"row\">\r\n                    <div className=\"columns contact-details\">\r\n                      <h2>Contact Details</h2>\r\n                      <p className=\"address\">\r\n                        <span>{resumeData.address}\r\n                        </span><br />\r\n                        <span>{resumeData.email}</span><br />\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"columns download\">\r\n                      <p>\r\n                        <a href=\"https://drive.google.com/file/d/1fi2wwvXM4ka22NSSFOLIotprjwGHdzT1/view?usp=sharing\" className=\"button\"><i className=\"fa fa-download\" />Download Resume</a>\r\n                      </p>\r\n                    </div>\r\n                  </div> {/* end row */}\r\n                </div> {/* end .main-col */}\r\n              </div>\r\n            </section>\r\n          );\r\n    }\r\n}","import React, { Component } from 'react';\r\nexport default class Resume extends Component {\r\n    render() {\r\n        let resumeData = this.props.resumeData;\r\n        return (\r\n            <section id=\"resume\">\r\n\r\n                <div className=\"row education\">\r\n\r\n                    <div className=\"three columns header-col\">\r\n                        <h1><span>Education</span></h1>\r\n                    </div>\r\n\r\n                    <div className=\"nine columns main-col\">\r\n                        {\r\n                            resumeData.education && resumeData.education.map((item) => {\r\n                                return (\r\n                                    <div className=\"row item\">\r\n                                        <div className=\"twelve columns\">\r\n                                            <h3>{item.UniversityName}</h3>\r\n                                            <p className=\"info\">\r\n                                                {item.specialization}\r\n                                                <span>&bull;</span> <em className=\"date\">{item.MonthOfPassing} {item.YearOfPassing}</em></p>\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"row work\">\r\n                    <div className=\"three columns header-col\">\r\n                        <h1><span>Experiences</span></h1>\r\n                    </div>\r\n\r\n                    <div className=\"nine columns main-col\">\r\n                        {\r\n                            resumeData.experience && resumeData.experience.map((item) => {\r\n                                return (\r\n                                    <div className=\"row item\">\r\n                                        <div className=\"twelve columns\">\r\n                                            <h3>{item.CompanyName}</h3>\r\n                                            <p className=\"info\">\r\n                                                {item.specialization}\r\n                                                <span>&bull;</span> <em className=\"date\">{item.MonthOfJoining} {item.YearOfJoining}&nbsp;-&nbsp;{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\r\n                                            <p>\r\n                                                {item.Achievements}\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row skill\">\r\n\r\n                    <div className=\"three columns header-col\">\r\n                        <h1><span>Skills</span></h1>\r\n                    </div>\r\n\r\n                    <div className=\"nine columns main-col\">\r\n\r\n                        <p>\r\n                            {resumeData.skillsDescription}\r\n                        </p>\r\n\r\n                        <div className=\"bars\">\r\n\r\n                            <ul className=\"skills\">\r\n                                {\r\n                                    resumeData.skills && resumeData.skills.map((item) => {\r\n                                        return (\r\n                                            <li>\r\n                                                <span className={`bar-expand ${item.skillname.toLowerCase()}`}>\r\n                                                </span><em>{item.skillname}</em>\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                            </ul>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </section>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nexport default class ContactUs extends Component {\r\n    render() {\r\n        let resumeData = this.props.resumeData;\r\n        return (\r\n            <section id=\"contact\">\r\n                <div className=\"row section-head\">\r\n                    <div className=\"ten columns\">\r\n                        <p className=\"lead\">\r\n                            Feel free to contact me\r\n              </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <aside className=\"eigth columns footer-widgets\">\r\n                        <div className=\"widget\">\r\n                            <h4>Email Me : &nbsp;\r\n                  {resumeData.email}\r\n                            </h4>\r\n                        </div>\r\n                    </aside>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nexport default class Footer extends Component {\r\n    render() {\r\n        let resumeData = this.props.resumeData;\r\n        return (\r\n            <footer>\r\n                <div className=\"row\">\r\n                    <div className=\"twelve columns\">\r\n                        <ul className=\"social-links\">\r\n                            {\r\n                                resumeData.socialLinks && resumeData.socialLinks.map((item) => {\r\n                                    return (\r\n                                        <li>\r\n                                            <a href={item.url}>\r\n                                                <i className={item.className} />\r\n                                            </a>\r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                    <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n}","let resumeData = {\r\n    \"imagebaseurl\":\"https://resume-react.github.io/\",\r\n    \"name\": \"Md Taufiqur Rahman\",\r\n    \"role\": \"Software Developer\",\r\n    \"roleDescription\": \"I'm quite passionate about software and web developement and graduated from University of Malaya. Except from my profession, I enjoy my free times with exploring new tech over google and love to play football. If I have option not to be software developer, I would be a cricket player which was my childhood dream.\",\r\n    \"socialLinks\":[\r\n        {\r\n          \"name\":\"linkedin\",\r\n          \"url\":\"https://www.linkedin.com/in/md-taufiqur-rahman-6426b9135/\",\r\n          \"className\":\"fa fa-linkedin\"\r\n        },\r\n        {\r\n          \"name\":\"github\",\r\n          \"url\":\"https://github.com/TaufiqurRahman45\",\r\n          \"className\":\"fa fa-github\"\r\n        },\r\n        {\r\n          \"name\":\"facebook\",\r\n          \"url\":\"https://www.facebook.com/ovroo\",\r\n          \"className\":\"fa fa-facebook\"\r\n        }\r\n      ],\r\n    \"aboutme\":\"I have finished my Bachelor in Software Engineering and have looking for job.\",\r\n    \"address\":\"Bangladesh\",\r\n    \"email\":\"toufiqurrahman45@gmail.com\",\r\n    \"education\":[\r\n      {\r\n        \"UniversityName\":\"University of Malaya\",\r\n        \"specialization\":\"Software Engineering\",\r\n        \"MonthOfPassing\":\"Sept\",\r\n        \"YearOfPassing\":\"2020\",\r\n      },\r\n      {\r\n        \"UniversityName\":\"Rajshahi City College\",\r\n        \"specialization\":\"Science\",\r\n        \"MonthOfPassing\":\"Nov\",\r\n        \"YearOfPassing\":\"2015\",\r\n      }\r\n    ],\r\n    \"experience\":[\r\n      {\r\n        \"CompanyName\":\"Maxis\",\r\n        \"specialization\":\"Software Developer\",\r\n        \"MonthOfJoining\":\"Jan\",\r\n        \"YearOfJoining\":\"2019\",\r\n        \"MonthOfLeaving\":\"Jul\",\r\n        \"YearOfLeaving\":\"2020\",\r\n      },\r\n      {\r\n        \"CompanyName\":\"Bebit.inc\",\r\n        \"specialization\":\"Software Developer & QA Engineer\",\r\n        \"MonthOfJoining\":\"Nov\",\r\n        \"YearOfJoining\":\"2018\",\r\n        \"MonthOfLeaving\":\"Oct\",\r\n        \"YearOfLeaving\":\"2019\",\r\n      },\r\n      {\r\n        \"CompanyName\":\"SeeSharp Solution Sdn.Bhd\",\r\n        \"specialization\":\"Web Developer\",\r\n        \"MonthOfJoining\":\"Aug\",\r\n        \"YearOfJoining\":\"2018\",\r\n        \"MonthOfLeaving\":\"Jan\",\r\n        \"YearOfLeaving\":\"2019\",\r\n      }\r\n\r\n    ],\r\n\r\n    \"skills\":[\r\n      {\r\n        \"skillname\":\"HTML5\"\r\n      },\r\n      {\r\n        \"skillname\":\"CSS\"\r\n      },\r\n      {\r\n        \"skillname\":\"Reactjs\"\r\n      },\r\n      {\r\n        \"skillname\":\"Django\"\r\n      },\r\n      {\r\n        \"skillname\":\"Cypress\"\r\n      },\r\n      {\r\n        \"skillname\":\"Angular6\"\r\n      }\r\n    ],\r\n  }\r\n  \r\n  export default resumeData","import React, { Component } from 'react';\nimport Header from './components/header/header';\nimport About from './components/about/about';\nimport Resume from './components/resume/resume';\nimport ContactUs from './components/contactus/contactus';\nimport Footer from './components/footer/footer';\nimport resumeData from './resumeData';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData}/>\n        <About resumeData={resumeData}/>\n        <Resume resumeData={resumeData}/>\n        <ContactUs resumeData={resumeData}/>\n        <Footer resumeData={resumeData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}